# Blog Platform

This is a full-stack blog platform with user authentication, blog post creation, and notifications. The application consists of a React frontend and a Node.js backend using MySQL database.

---

## Features

- User registration and login with authentication.
- Create, edit, and delete blog posts.
- Display a list of posts with pagination.
- Upload and preview cover images for posts.
- Notifications for success, warning, and error events.
- Backend API built with Node.js and Express.
- Persistent data storage using MySQL database.

---

## Technologies Used

- **Frontend:** React, Vite, HTML, CSS, JavaScript, PrimeReact (for UI components).
- **Backend:** Node.js, Express.
- **Database:** MySQL.
- **State Management & Notifications:** Custom Toast component.
- **File Upload:** Backend handles image uploads.

---

## Project Structure

- `/client` — React frontend application.
- `/server` — Node.js backend API.

---


### Prerequisites

- Node.js and npm installed.
- MySQL server running and database configured.


### Installation and Running

1. Clone the repository:

```bash
git clone https://github.com/Milos1333/blog-platform.git
cd blog-platform


                                                                
2. Install dependencies:

  For frontend:
                                                                

cd client
npm install

  For backend:

cd ../server
npm install

3.  Setup your MySQL database and configure connection settings in the backend (usually in a .env file or config).

4.  Run backend server:

node index.js

5.  Run frontend application:

cd ../client
npm run dev

6.  Open your browser at http://localhost:3000 to use the app.


                                                              
                                                                
Usage

    Register or login to access blog features.

    Create new posts with title, content, category, cover image, and creation date.

    View your posts and edit or delete them as needed.

    Notifications appear for success or error events.



Author: Milos Klepic
